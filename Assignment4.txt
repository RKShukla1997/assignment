Question-1

class Test{
	static int a;
	//int b=20;
	static
	{
		a=10;
		System.out.println("static block Called");
	}
}

public class StaticBlock{
	public static void main(String[] args){
		System.out.println(Test.a);
		
		}
	}

	
Question-2

abstract class Animal{
	String breed;
	String colour;
	abstract void speak();
}
class Dog extends Animal{
	void display()
	{
	breed = "German Shefard";
	colour = "Light Brown";
	
	System.out.println(" my breed is " + breed);
	System.out.println(" my Colour is " + colour);
	}
	void speak(){
		
		System.out.println("i am Dog ");
	}
}

class Cat extends Animal{
	void display()
	{
		breed = "American";
	colour = "Black";
	System.out.println("my breed is " + breed);
	System.out.println("my Colour is " + colour);
	}
	void speak(){
		System.out.println("i am Cat");
	}
}

class AnimalInheritance{
	public static void main(String[] args){
		Cat c = new Cat();
		Dog d= new Dog();
	    c.display(); 	
		c.speak();
		d.display();
		d.speak();
	}
}

Question-3

class Test{
	
	void Display(){
		System.out.println("Null");
	}
	
	void Display(int a){
		System.out.println("Integer");
	}
	
	void Display(double a){
		System.out.println("Double");
	}
	
}

public class Overload{

public static void main(String[] x){
	Test t = new Test();
	t.Display();
	t.Display(10);
	t.Display(1.0);
	}
}

Question-4

abstract class Vehicle{

 abstract void  start();
void stop(){
System.out.println("Vehicle Stops");
	}
}

class TwoWheeler extends Vehicle{
	void start(){
		System.out.println("Two wheeler Starts");
	}
}

class FourWheeler extends Vehicle{
	void start(){
		System.out.println("Four wheeler Starts");
	}
}

public class VehicleInheritance{
	public static void main(String[] args){
	TwoWheeler tw = new TwoWheeler();
	FourWheeler fw = new FourWheeler();	
	tw.start();
	tw.stop();
	fw.start();
	fw.stop();
	}
}

